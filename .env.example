# PeakSelf Environment Configuration
# Copy this file to .env and fill in your values

# ============================================================================
# REQUIRED VARIABLES (Server will not start without these)
# ============================================================================

# Database Configuration
# PostgreSQL connection string
# Format: postgresql://user:password@host:port/database
DATABASE_URL=postgresql://user:password@localhost:5432/peakself

# Security Secrets
# Generate secure random strings (32+ characters recommended)
# Run: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SESSION_SECRET=your_session_secret_min_32_chars_change_me_in_production
JWT_SECRET=your_jwt_secret_min_32_chars_change_me_in_production

# Application Environment
# Options: development, production, test
NODE_ENV=development

# ============================================================================
# OPTIONAL VARIABLES
# ============================================================================

# Server Configuration
PORT=5000
CLIENT_URL=http://localhost:5173

# Development Options
# Set to 'true' to enable rate limiting (recommended for production-like testing)
# By default, rate limiting is DISABLED to make development easier
ENABLE_RATE_LIMIT=false

# Application Base URL (for email links, OAuth callbacks, etc.)
APP_BASE_URL=http://localhost:5000

# Google OAuth (Optional - for Google sign-in)
# Get credentials from: https://console.cloud.google.com/
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_CALLBACK_URL=/api/auth/google/callback

# Email Configuration (Optional - for verification emails)
# SMTP server settings
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASS=
EMAIL_FROM=no-reply@peakself.local

# ============================================================================
# NOTES
# ============================================================================
# 
# Development Setup:
# 1. Copy this file to .env
# 2. Update DATABASE_URL with your PostgreSQL credentials
# 3. Generate secure SESSION_SECRET and JWT_SECRET values
# 4. Set NODE_ENV to 'development'
# 5. (Optional) Configure Google OAuth and SMTP if needed
#
# Production Setup:
# - Use strong, unique secrets (never use the example values!)
# - Set NODE_ENV to 'production'
# - Configure all SMTP settings for email functionality
# - Use environment variables from your hosting platform
# - Enable SSL/TLS for database and SMTP connections
#
# Security:
# - Never commit the .env file to version control
# - .env is already in .gitignore
# - Rotate secrets regularly in production
# - Use different secrets for each environment
